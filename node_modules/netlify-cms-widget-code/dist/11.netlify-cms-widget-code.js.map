{"version":3,"sources":["webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/mode/python/python.js","webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/mode/stex/stex.js","webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/mode/rst/rst.js","webpack://NetlifyCmsWidgetCode//Users/erquhart/code/gh/netlify/netlify-cms/main/node_modules/codemirror/addon/mode/overlay.js"],"names":["CodeMirror","wordRegexp","words","RegExp","join","str","wordOperators","commonKeywords","commonBuiltins","top","state","scopes","length","registerHelper","concat","defineMode","conf","parserConf","ERRORCLASS","delimiters","singleDelimiters","operators","singleOperators","doubleOperators","doubleDelimiters","tripleDelimiters","i","splice","hangingIndent","indentUnit","myKeywords","myBuiltins","undefined","extra_keywords","extra_builtins","py3","version","Number","identifiers","stringPrefixes","keywords","builtins","tokenBase","stream","sol","lastToken","indent","indentation","type","scopeOffset","offset","eatSpace","lineOffset","pushPyScope","dedent","peek","errorToken","style","tokenBaseInner","match","floatLiteral","eat","intLiteral","current","toLowerCase","indexOf","tokenize","delimiter","tokenOuter","charAt","substr","singleline","OUTCLASS","tokenNestedExpr","depth","inner","tokenString","eol","eatWhile","next","singleLineStringErrors","isString","formatStringFactory","tokenStringFactory","pop","push","align","indented","tokenLexer","beginningOfLine","test","lambda","delimiter_index","column","pushBracketScope","slice","startState","basecolumn","token","addErr","textAfter","Pass","scope","closing","electricInput","closeBrackets","triples","lineComment","fold","defineMIME","name","split","mod","_config","parserConfig","pushCommand","command","cmdState","peekCommand","addPluginPattern","pluginName","cmdStyle","styles","this","bracketNo","argument","styleIdentifier","openBracket","closeBracket","plugins","setState","f","normal","source","plug","cmdName","beginParams","inMathMode","ch","skipToEnd","context","getMostPowerful","endModeSeq","popCommand","copyState","s","blankLine","config","options","rx_strong","rx_emphasis","rx_literal","rx_number","rx_positive","rx_negative","rx_uri","overlay","mode","getMode","backdrop","overlayMode","format","string","args","Array","prototype","call","arguments","replace","n","mode_python","mode_stex","TAIL","rx_TAIL","NAME","rx_NAME","REF_NAME","TEXT1","TEXT2","rx_TEXT2","rx_section","rx_explicit","rx_link","rx_directive","rx_substitution","rx_footnote","rx_citation","rx_substitution_ref","rx_footnote_ref","rx_citation_ref","rx_link_ref1","rx_link_ref2","rx_role_pre","rx_role_suf","rx_role","rx_directive_name","rx_directive_tail","rx_substitution_text","rx_substitution_sepa","rx_substitution_name","rx_substitution_tail","rx_link_head","rx_link_name","rx_link_tail","rx_verbatim","rx_examples","to_normal","change","to_mode","local","to_explicit","phase","stage","tmp_stex","tmp","to_verbatim","tmp_py","to_comment","as_block","ctx","tok","innerMode","base","combine","basePos","baseCur","overlayPos","overlayCur","streamSeen","Math","min","start","pos","combineTokens","line","electricChars","baseToken","overlayToken"],"mappings":"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","file":"11.netlify-cms-widget-code.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  var wordOperators = wordRegexp([\"and\", \"or\", \"not\", \"is\"]);\n  var commonKeywords = [\"as\", \"assert\", \"break\", \"class\", \"continue\",\n                        \"def\", \"del\", \"elif\", \"else\", \"except\", \"finally\",\n                        \"for\", \"from\", \"global\", \"if\", \"import\",\n                        \"lambda\", \"pass\", \"raise\", \"return\",\n                        \"try\", \"while\", \"with\", \"yield\", \"in\"];\n  var commonBuiltins = [\"abs\", \"all\", \"any\", \"bin\", \"bool\", \"bytearray\", \"callable\", \"chr\",\n                        \"classmethod\", \"compile\", \"complex\", \"delattr\", \"dict\", \"dir\", \"divmod\",\n                        \"enumerate\", \"eval\", \"filter\", \"float\", \"format\", \"frozenset\",\n                        \"getattr\", \"globals\", \"hasattr\", \"hash\", \"help\", \"hex\", \"id\",\n                        \"input\", \"int\", \"isinstance\", \"issubclass\", \"iter\", \"len\",\n                        \"list\", \"locals\", \"map\", \"max\", \"memoryview\", \"min\", \"next\",\n                        \"object\", \"oct\", \"open\", \"ord\", \"pow\", \"property\", \"range\",\n                        \"repr\", \"reversed\", \"round\", \"set\", \"setattr\", \"slice\",\n                        \"sorted\", \"staticmethod\", \"str\", \"sum\", \"super\", \"tuple\",\n                        \"type\", \"vars\", \"zip\", \"__import__\", \"NotImplemented\",\n                        \"Ellipsis\", \"__debug__\"];\n  CodeMirror.registerHelper(\"hintWords\", \"python\", commonKeywords.concat(commonBuiltins));\n\n  function top(state) {\n    return state.scopes[state.scopes.length - 1];\n  }\n\n  CodeMirror.defineMode(\"python\", function(conf, parserConf) {\n    var ERRORCLASS = \"error\";\n\n    var delimiters = parserConf.delimiters || parserConf.singleDelimiters || /^[\\(\\)\\[\\]\\{\\}@,:`=;\\.\\\\]/;\n    //               (Backwards-compatiblity with old, cumbersome config system)\n    var operators = [parserConf.singleOperators, parserConf.doubleOperators, parserConf.doubleDelimiters, parserConf.tripleDelimiters,\n                     parserConf.operators || /^([-+*/%\\/&|^]=?|[<>=]+|\\/\\/=?|\\*\\*=?|!=|[~!@]|\\.\\.\\.)/]\n    for (var i = 0; i < operators.length; i++) if (!operators[i]) operators.splice(i--, 1)\n\n    var hangingIndent = parserConf.hangingIndent || conf.indentUnit;\n\n    var myKeywords = commonKeywords, myBuiltins = commonBuiltins;\n    if (parserConf.extra_keywords != undefined)\n      myKeywords = myKeywords.concat(parserConf.extra_keywords);\n\n    if (parserConf.extra_builtins != undefined)\n      myBuiltins = myBuiltins.concat(parserConf.extra_builtins);\n\n    var py3 = !(parserConf.version && Number(parserConf.version) < 3)\n    if (py3) {\n      // since http://legacy.python.org/dev/peps/pep-0465/ @ is also an operator\n      var identifiers = parserConf.identifiers|| /^[_A-Za-z\\u00A1-\\uFFFF][_A-Za-z0-9\\u00A1-\\uFFFF]*/;\n      myKeywords = myKeywords.concat([\"nonlocal\", \"False\", \"True\", \"None\", \"async\", \"await\"]);\n      myBuiltins = myBuiltins.concat([\"ascii\", \"bytes\", \"exec\", \"print\"]);\n      var stringPrefixes = new RegExp(\"^(([rbuf]|(br)|(fr))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    } else {\n      var identifiers = parserConf.identifiers|| /^[_A-Za-z][_A-Za-z0-9]*/;\n      myKeywords = myKeywords.concat([\"exec\", \"print\"]);\n      myBuiltins = myBuiltins.concat([\"apply\", \"basestring\", \"buffer\", \"cmp\", \"coerce\", \"execfile\",\n                                      \"file\", \"intern\", \"long\", \"raw_input\", \"reduce\", \"reload\",\n                                      \"unichr\", \"unicode\", \"xrange\", \"False\", \"True\", \"None\"]);\n      var stringPrefixes = new RegExp(\"^(([rubf]|(ur)|(br))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    }\n    var keywords = wordRegexp(myKeywords);\n    var builtins = wordRegexp(myBuiltins);\n\n    // tokenizers\n    function tokenBase(stream, state) {\n      var sol = stream.sol() && state.lastToken != \"\\\\\"\n      if (sol) state.indent = stream.indentation()\n      // Handle scope changes\n      if (sol && top(state).type == \"py\") {\n        var scopeOffset = top(state).offset;\n        if (stream.eatSpace()) {\n          var lineOffset = stream.indentation();\n          if (lineOffset > scopeOffset)\n            pushPyScope(state);\n          else if (lineOffset < scopeOffset && dedent(stream, state) && stream.peek() != \"#\")\n            state.errorToken = true;\n          return null;\n        } else {\n          var style = tokenBaseInner(stream, state);\n          if (scopeOffset > 0 && dedent(stream, state))\n            style += \" \" + ERRORCLASS;\n          return style;\n        }\n      }\n      return tokenBaseInner(stream, state);\n    }\n\n    function tokenBaseInner(stream, state) {\n      if (stream.eatSpace()) return null;\n\n      // Handle Comments\n      if (stream.match(/^#.*/)) return \"comment\";\n\n      // Handle Number Literals\n      if (stream.match(/^[0-9\\.]/, false)) {\n        var floatLiteral = false;\n        // Floats\n        if (stream.match(/^[\\d_]*\\.\\d+(e[\\+\\-]?\\d+)?/i)) { floatLiteral = true; }\n        if (stream.match(/^[\\d_]+\\.\\d*/)) { floatLiteral = true; }\n        if (stream.match(/^\\.\\d+/)) { floatLiteral = true; }\n        if (floatLiteral) {\n          // Float literals may be \"imaginary\"\n          stream.eat(/J/i);\n          return \"number\";\n        }\n        // Integers\n        var intLiteral = false;\n        // Hex\n        if (stream.match(/^0x[0-9a-f_]+/i)) intLiteral = true;\n        // Binary\n        if (stream.match(/^0b[01_]+/i)) intLiteral = true;\n        // Octal\n        if (stream.match(/^0o[0-7_]+/i)) intLiteral = true;\n        // Decimal\n        if (stream.match(/^[1-9][\\d_]*(e[\\+\\-]?[\\d_]+)?/)) {\n          // Decimal literals may be \"imaginary\"\n          stream.eat(/J/i);\n          // TODO - Can you have imaginary longs?\n          intLiteral = true;\n        }\n        // Zero by itself with no other piece of number.\n        if (stream.match(/^0(?![\\dx])/i)) intLiteral = true;\n        if (intLiteral) {\n          // Integer literals may be \"long\"\n          stream.eat(/L/i);\n          return \"number\";\n        }\n      }\n\n      // Handle Strings\n      if (stream.match(stringPrefixes)) {\n        var isFmtString = stream.current().toLowerCase().indexOf('f') !== -1;\n        if (!isFmtString) {\n          state.tokenize = tokenStringFactory(stream.current(), state.tokenize);\n          return state.tokenize(stream, state);\n        } else {\n          state.tokenize = formatStringFactory(stream.current(), state.tokenize);\n          return state.tokenize(stream, state);\n        }\n      }\n\n      for (var i = 0; i < operators.length; i++)\n        if (stream.match(operators[i])) return \"operator\"\n\n      if (stream.match(delimiters)) return \"punctuation\";\n\n      if (state.lastToken == \".\" && stream.match(identifiers))\n        return \"property\";\n\n      if (stream.match(keywords) || stream.match(wordOperators))\n        return \"keyword\";\n\n      if (stream.match(builtins))\n        return \"builtin\";\n\n      if (stream.match(/^(self|cls)\\b/))\n        return \"variable-2\";\n\n      if (stream.match(identifiers)) {\n        if (state.lastToken == \"def\" || state.lastToken == \"class\")\n          return \"def\";\n        return \"variable\";\n      }\n\n      // Handle non-detected items\n      stream.next();\n      return ERRORCLASS;\n    }\n\n    function formatStringFactory(delimiter, tokenOuter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n        delimiter = delimiter.substr(1);\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenNestedExpr(depth) {\n        return function(stream, state) {\n          var inner = tokenBaseInner(stream, state)\n          if (inner == \"punctuation\") {\n            if (stream.current() == \"{\") {\n              state.tokenize = tokenNestedExpr(depth + 1)\n            } else if (stream.current() == \"}\") {\n              if (depth > 1) state.tokenize = tokenNestedExpr(depth - 1)\n              else state.tokenize = tokenString\n            }\n          }\n          return inner\n        }\n      }\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\{\\}\\\\]/);\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol())\n              return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenOuter;\n            return OUTCLASS;\n          } else if (stream.match('{{')) {\n            // ignore {{ in f-str\n            return OUTCLASS;\n          } else if (stream.match('{', false)) {\n            // switch to nested mode\n            state.tokenize = tokenNestedExpr(0)\n            if (stream.current()) return OUTCLASS;\n            else return state.tokenize(stream, state)\n          } else if (stream.match('}}')) {\n            return OUTCLASS;\n          } else if (stream.match('}')) {\n            // single } in f-string is an error\n            return ERRORCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n        if (singleline) {\n          if (parserConf.singleLineStringErrors)\n            return ERRORCLASS;\n          else\n            state.tokenize = tokenOuter;\n        }\n        return OUTCLASS;\n      }\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function tokenStringFactory(delimiter, tokenOuter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n        delimiter = delimiter.substr(1);\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\\\]/);\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol())\n              return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenOuter;\n            return OUTCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n        if (singleline) {\n          if (parserConf.singleLineStringErrors)\n            return ERRORCLASS;\n          else\n            state.tokenize = tokenOuter;\n        }\n        return OUTCLASS;\n      }\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function pushPyScope(state) {\n      while (top(state).type != \"py\") state.scopes.pop()\n      state.scopes.push({offset: top(state).offset + conf.indentUnit,\n                         type: \"py\",\n                         align: null})\n    }\n\n    function pushBracketScope(stream, state, type) {\n      var align = stream.match(/^([\\s\\[\\{\\(]|#.*)*$/, false) ? null : stream.column() + 1\n      state.scopes.push({offset: state.indent + hangingIndent,\n                         type: type,\n                         align: align})\n    }\n\n    function dedent(stream, state) {\n      var indented = stream.indentation();\n      while (state.scopes.length > 1 && top(state).offset > indented) {\n        if (top(state).type != \"py\") return true;\n        state.scopes.pop();\n      }\n      return top(state).offset != indented;\n    }\n\n    function tokenLexer(stream, state) {\n      if (stream.sol()) state.beginningOfLine = true;\n\n      var style = state.tokenize(stream, state);\n      var current = stream.current();\n\n      // Handle decorators\n      if (state.beginningOfLine && current == \"@\")\n        return stream.match(identifiers, false) ? \"meta\" : py3 ? \"operator\" : ERRORCLASS;\n\n      if (/\\S/.test(current)) state.beginningOfLine = false;\n\n      if ((style == \"variable\" || style == \"builtin\")\n          && state.lastToken == \"meta\")\n        style = \"meta\";\n\n      // Handle scope changes.\n      if (current == \"pass\" || current == \"return\")\n        state.dedent += 1;\n\n      if (current == \"lambda\") state.lambda = true;\n      if (current == \":\" && !state.lambda && top(state).type == \"py\")\n        pushPyScope(state);\n\n      if (current.length == 1 && !/string|comment/.test(style)) {\n        var delimiter_index = \"[({\".indexOf(current);\n        if (delimiter_index != -1)\n          pushBracketScope(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n\n        delimiter_index = \"])}\".indexOf(current);\n        if (delimiter_index != -1) {\n          if (top(state).type == current) state.indent = state.scopes.pop().offset - hangingIndent\n          else return ERRORCLASS;\n        }\n      }\n      if (state.dedent > 0 && stream.eol() && top(state).type == \"py\") {\n        if (state.scopes.length > 1) state.scopes.pop();\n        state.dedent -= 1;\n      }\n\n      return style;\n    }\n\n    var external = {\n      startState: function(basecolumn) {\n        return {\n          tokenize: tokenBase,\n          scopes: [{offset: basecolumn || 0, type: \"py\", align: null}],\n          indent: basecolumn || 0,\n          lastToken: null,\n          lambda: false,\n          dedent: 0\n        };\n      },\n\n      token: function(stream, state) {\n        var addErr = state.errorToken;\n        if (addErr) state.errorToken = false;\n        var style = tokenLexer(stream, state);\n\n        if (style && style != \"comment\")\n          state.lastToken = (style == \"keyword\" || style == \"punctuation\") ? stream.current() : style;\n        if (style == \"punctuation\") style = null;\n\n        if (stream.eol() && state.lambda)\n          state.lambda = false;\n        return addErr ? style + \" \" + ERRORCLASS : style;\n      },\n\n      indent: function(state, textAfter) {\n        if (state.tokenize != tokenBase)\n          return state.tokenize.isString ? CodeMirror.Pass : 0;\n\n        var scope = top(state), closing = scope.type == textAfter.charAt(0)\n        if (scope.align != null)\n          return scope.align - (closing ? 1 : 0)\n        else\n          return scope.offset - (closing ? hangingIndent : 0)\n      },\n\n      electricInput: /^\\s*[\\}\\]\\)]$/,\n      closeBrackets: {triples: \"'\\\"\"},\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n    return external;\n  });\n\n  CodeMirror.defineMIME(\"text/x-python\", \"python\");\n\n  var words = function(str) { return str.split(\" \"); };\n\n  CodeMirror.defineMIME(\"text/x-cython\", {\n    name: \"python\",\n    extra_keywords: words(\"by cdef cimport cpdef ctypedef enum except \"+\n                          \"extern gil include nogil property public \"+\n                          \"readonly struct union DEF IF ELIF ELSE\")\n  });\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/*\n * Author: Constantin Jucovschi (c.jucovschi@jacobs-university.de)\n * Licence: MIT\n */\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"stex\", function(_config, parserConfig) {\n    \"use strict\";\n\n    function pushCommand(state, command) {\n      state.cmdState.push(command);\n    }\n\n    function peekCommand(state) {\n      if (state.cmdState.length > 0) {\n        return state.cmdState[state.cmdState.length - 1];\n      } else {\n        return null;\n      }\n    }\n\n    function popCommand(state) {\n      var plug = state.cmdState.pop();\n      if (plug) {\n        plug.closeBracket();\n      }\n    }\n\n    // returns the non-default plugin closest to the end of the list\n    function getMostPowerful(state) {\n      var context = state.cmdState;\n      for (var i = context.length - 1; i >= 0; i--) {\n        var plug = context[i];\n        if (plug.name == \"DEFAULT\") {\n          continue;\n        }\n        return plug;\n      }\n      return { styleIdentifier: function() { return null; } };\n    }\n\n    function addPluginPattern(pluginName, cmdStyle, styles) {\n      return function () {\n        this.name = pluginName;\n        this.bracketNo = 0;\n        this.style = cmdStyle;\n        this.styles = styles;\n        this.argument = null;   // \\begin and \\end have arguments that follow. These are stored in the plugin\n\n        this.styleIdentifier = function() {\n          return this.styles[this.bracketNo - 1] || null;\n        };\n        this.openBracket = function() {\n          this.bracketNo++;\n          return \"bracket\";\n        };\n        this.closeBracket = function() {};\n      };\n    }\n\n    var plugins = {};\n\n    plugins[\"importmodule\"] = addPluginPattern(\"importmodule\", \"tag\", [\"string\", \"builtin\"]);\n    plugins[\"documentclass\"] = addPluginPattern(\"documentclass\", \"tag\", [\"\", \"atom\"]);\n    plugins[\"usepackage\"] = addPluginPattern(\"usepackage\", \"tag\", [\"atom\"]);\n    plugins[\"begin\"] = addPluginPattern(\"begin\", \"tag\", [\"atom\"]);\n    plugins[\"end\"] = addPluginPattern(\"end\", \"tag\", [\"atom\"]);\n\n    plugins[\"label\"    ] = addPluginPattern(\"label\"    , \"tag\", [\"atom\"]);\n    plugins[\"ref\"      ] = addPluginPattern(\"ref\"      , \"tag\", [\"atom\"]);\n    plugins[\"eqref\"    ] = addPluginPattern(\"eqref\"    , \"tag\", [\"atom\"]);\n    plugins[\"cite\"     ] = addPluginPattern(\"cite\"     , \"tag\", [\"atom\"]);\n    plugins[\"bibitem\"  ] = addPluginPattern(\"bibitem\"  , \"tag\", [\"atom\"]);\n    plugins[\"Bibitem\"  ] = addPluginPattern(\"Bibitem\"  , \"tag\", [\"atom\"]);\n    plugins[\"RBibitem\" ] = addPluginPattern(\"RBibitem\" , \"tag\", [\"atom\"]);\n\n    plugins[\"DEFAULT\"] = function () {\n      this.name = \"DEFAULT\";\n      this.style = \"tag\";\n\n      this.styleIdentifier = this.openBracket = this.closeBracket = function() {};\n    };\n\n    function setState(state, f) {\n      state.f = f;\n    }\n\n    // called when in a normal (no environment) context\n    function normal(source, state) {\n      var plug;\n      // Do we look like '\\command' ?  If so, attempt to apply the plugin 'command'\n      if (source.match(/^\\\\[a-zA-Z@]+/)) {\n        var cmdName = source.current().slice(1);\n        plug = plugins[cmdName] || plugins[\"DEFAULT\"];\n        plug = new plug();\n        pushCommand(state, plug);\n        setState(state, beginParams);\n        return plug.style;\n      }\n\n      // escape characters\n      if (source.match(/^\\\\[$&%#{}_]/)) {\n        return \"tag\";\n      }\n\n      // white space control characters\n      if (source.match(/^\\\\[,;!\\/\\\\]/)) {\n        return \"tag\";\n      }\n\n      // find if we're starting various math modes\n      if (source.match(\"\\\\[\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"\\\\]\"); });\n        return \"keyword\";\n      }\n      if (source.match(\"\\\\(\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"\\\\)\"); });\n        return \"keyword\";\n      }\n      if (source.match(\"$$\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"$$\"); });\n        return \"keyword\";\n      }\n      if (source.match(\"$\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"$\"); });\n        return \"keyword\";\n      }\n\n      var ch = source.next();\n      if (ch == \"%\") {\n        source.skipToEnd();\n        return \"comment\";\n      } else if (ch == '}' || ch == ']') {\n        plug = peekCommand(state);\n        if (plug) {\n          plug.closeBracket(ch);\n          setState(state, beginParams);\n        } else {\n          return \"error\";\n        }\n        return \"bracket\";\n      } else if (ch == '{' || ch == '[') {\n        plug = plugins[\"DEFAULT\"];\n        plug = new plug();\n        pushCommand(state, plug);\n        return \"bracket\";\n      } else if (/\\d/.test(ch)) {\n        source.eatWhile(/[\\w.%]/);\n        return \"atom\";\n      } else {\n        source.eatWhile(/[\\w\\-_]/);\n        plug = getMostPowerful(state);\n        if (plug.name == 'begin') {\n          plug.argument = source.current();\n        }\n        return plug.styleIdentifier();\n      }\n    }\n\n    function inMathMode(source, state, endModeSeq) {\n      if (source.eatSpace()) {\n        return null;\n      }\n      if (endModeSeq && source.match(endModeSeq)) {\n        setState(state, normal);\n        return \"keyword\";\n      }\n      if (source.match(/^\\\\[a-zA-Z@]+/)) {\n        return \"tag\";\n      }\n      if (source.match(/^[a-zA-Z]+/)) {\n        return \"variable-2\";\n      }\n      // escape characters\n      if (source.match(/^\\\\[$&%#{}_]/)) {\n        return \"tag\";\n      }\n      // white space control characters\n      if (source.match(/^\\\\[,;!\\/]/)) {\n        return \"tag\";\n      }\n      // special math-mode characters\n      if (source.match(/^[\\^_&]/)) {\n        return \"tag\";\n      }\n      // non-special characters\n      if (source.match(/^[+\\-<>|=,\\/@!*:;'\"`~#?]/)) {\n        return null;\n      }\n      if (source.match(/^(\\d+\\.\\d*|\\d*\\.\\d+|\\d+)/)) {\n        return \"number\";\n      }\n      var ch = source.next();\n      if (ch == \"{\" || ch == \"}\" || ch == \"[\" || ch == \"]\" || ch == \"(\" || ch == \")\") {\n        return \"bracket\";\n      }\n\n      if (ch == \"%\") {\n        source.skipToEnd();\n        return \"comment\";\n      }\n      return \"error\";\n    }\n\n    function beginParams(source, state) {\n      var ch = source.peek(), lastPlug;\n      if (ch == '{' || ch == '[') {\n        lastPlug = peekCommand(state);\n        lastPlug.openBracket(ch);\n        source.eat(ch);\n        setState(state, normal);\n        return \"bracket\";\n      }\n      if (/[ \\t\\r]/.test(ch)) {\n        source.eat(ch);\n        return null;\n      }\n      setState(state, normal);\n      popCommand(state);\n\n      return normal(source, state);\n    }\n\n    return {\n      startState: function() {\n        var f = parserConfig.inMathMode ? function(source, state){ return inMathMode(source, state); } : normal;\n        return {\n          cmdState: [],\n          f: f\n        };\n      },\n      copyState: function(s) {\n        return {\n          cmdState: s.cmdState.slice(),\n          f: s.f\n        };\n      },\n      token: function(stream, state) {\n        return state.f(stream, state);\n      },\n      blankLine: function(state) {\n        state.f = normal;\n        state.cmdState.length = 0;\n      },\n      lineComment: \"%\"\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-stex\", \"stex\");\n  CodeMirror.defineMIME(\"text/x-latex\", \"stex\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../python/python\"), require(\"../stex/stex\"), require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../python/python\", \"../stex/stex\", \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('rst', function (config, options) {\n\n  var rx_strong = /^\\*\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*\\*/;\n  var rx_emphasis = /^\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*/;\n  var rx_literal = /^``[^`\\s](?:[^`]*[^`\\s])``/;\n\n  var rx_number = /^(?:[\\d]+(?:[\\.,]\\d+)*)/;\n  var rx_positive = /^(?:\\s\\+[\\d]+(?:[\\.,]\\d+)*)/;\n  var rx_negative = /^(?:\\s\\-[\\d]+(?:[\\.,]\\d+)*)/;\n\n  var rx_uri_protocol = \"[Hh][Tt][Tt][Pp][Ss]?://\";\n  var rx_uri_domain = \"(?:[\\\\d\\\\w.-]+)\\\\.(?:\\\\w{2,6})\";\n  var rx_uri_path = \"(?:/[\\\\d\\\\w\\\\#\\\\%\\\\&\\\\-\\\\.\\\\,\\\\/\\\\:\\\\=\\\\?\\\\~]+)*\";\n  var rx_uri = new RegExp(\"^\" + rx_uri_protocol + rx_uri_domain + rx_uri_path);\n\n  var overlay = {\n    token: function (stream) {\n\n      if (stream.match(rx_strong) && stream.match (/\\W+|$/, false))\n        return 'strong';\n      if (stream.match(rx_emphasis) && stream.match (/\\W+|$/, false))\n        return 'em';\n      if (stream.match(rx_literal) && stream.match (/\\W+|$/, false))\n        return 'string-2';\n      if (stream.match(rx_number))\n        return 'number';\n      if (stream.match(rx_positive))\n        return 'positive';\n      if (stream.match(rx_negative))\n        return 'negative';\n      if (stream.match(rx_uri))\n        return 'link';\n\n      while (stream.next() != null) {\n        if (stream.match(rx_strong, false)) break;\n        if (stream.match(rx_emphasis, false)) break;\n        if (stream.match(rx_literal, false)) break;\n        if (stream.match(rx_number, false)) break;\n        if (stream.match(rx_positive, false)) break;\n        if (stream.match(rx_negative, false)) break;\n        if (stream.match(rx_uri, false)) break;\n      }\n\n      return null;\n    }\n  };\n\n  var mode = CodeMirror.getMode(\n    config, options.backdrop || 'rst-base'\n  );\n\n  return CodeMirror.overlayMode(mode, overlay, true); // combine\n}, 'python', 'stex');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nCodeMirror.defineMode('rst-base', function (config) {\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function format(string) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return string.replace(/{(\\d+)}/g, function (match, n) {\n      return typeof args[n] != 'undefined' ? args[n] : match;\n    });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  var mode_python = CodeMirror.getMode(config, 'python');\n  var mode_stex = CodeMirror.getMode(config, 'stex');\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  var SEPA = \"\\\\s+\";\n  var TAIL = \"(?:\\\\s*|\\\\W|$)\",\n  rx_TAIL = new RegExp(format('^{0}', TAIL));\n\n  var NAME =\n    \"(?:[^\\\\W\\\\d_](?:[\\\\w!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\",\n  rx_NAME = new RegExp(format('^{0}', NAME));\n  var NAME_WWS =\n    \"(?:[^\\\\W\\\\d_](?:[\\\\w\\\\s!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\";\n  var REF_NAME = format('(?:{0}|`{1}`)', NAME, NAME_WWS);\n\n  var TEXT1 = \"(?:[^\\\\s\\\\|](?:[^\\\\|]*[^\\\\s\\\\|])?)\";\n  var TEXT2 = \"(?:[^\\\\`]+)\",\n  rx_TEXT2 = new RegExp(format('^{0}', TEXT2));\n\n  var rx_section = new RegExp(\n    \"^([!'#$%&\\\"()*+,-./:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~])\\\\1{3,}\\\\s*$\");\n  var rx_explicit = new RegExp(\n    format('^\\\\.\\\\.{0}', SEPA));\n  var rx_link = new RegExp(\n    format('^_{0}:{1}|^__:{1}', REF_NAME, TAIL));\n  var rx_directive = new RegExp(\n    format('^{0}::{1}', REF_NAME, TAIL));\n  var rx_substitution = new RegExp(\n    format('^\\\\|{0}\\\\|{1}{2}::{3}', TEXT1, SEPA, REF_NAME, TAIL));\n  var rx_footnote = new RegExp(\n    format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]{1}', REF_NAME, TAIL));\n  var rx_citation = new RegExp(\n    format('^\\\\[{0}\\\\]{1}', REF_NAME, TAIL));\n\n  var rx_substitution_ref = new RegExp(\n    format('^\\\\|{0}\\\\|', TEXT1));\n  var rx_footnote_ref = new RegExp(\n    format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]_', REF_NAME));\n  var rx_citation_ref = new RegExp(\n    format('^\\\\[{0}\\\\]_', REF_NAME));\n  var rx_link_ref1 = new RegExp(\n    format('^{0}__?', REF_NAME));\n  var rx_link_ref2 = new RegExp(\n    format('^`{0}`_', TEXT2));\n\n  var rx_role_pre = new RegExp(\n    format('^:{0}:`{1}`{2}', NAME, TEXT2, TAIL));\n  var rx_role_suf = new RegExp(\n    format('^`{1}`:{0}:{2}', NAME, TEXT2, TAIL));\n  var rx_role = new RegExp(\n    format('^:{0}:{1}', NAME, TAIL));\n\n  var rx_directive_name = new RegExp(format('^{0}', REF_NAME));\n  var rx_directive_tail = new RegExp(format('^::{0}', TAIL));\n  var rx_substitution_text = new RegExp(format('^\\\\|{0}\\\\|', TEXT1));\n  var rx_substitution_sepa = new RegExp(format('^{0}', SEPA));\n  var rx_substitution_name = new RegExp(format('^{0}', REF_NAME));\n  var rx_substitution_tail = new RegExp(format('^::{0}', TAIL));\n  var rx_link_head = new RegExp(\"^_\");\n  var rx_link_name = new RegExp(format('^{0}|_', REF_NAME));\n  var rx_link_tail = new RegExp(format('^:{0}', TAIL));\n\n  var rx_verbatim = new RegExp('^::\\\\s*$');\n  var rx_examples = new RegExp('^\\\\s+(?:>>>|In \\\\[\\\\d+\\\\]:)\\\\s');\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_normal(stream, state) {\n    var token = null;\n\n    if (stream.sol() && stream.match(rx_examples, false)) {\n      change(state, to_mode, {\n        mode: mode_python, local: CodeMirror.startState(mode_python)\n      });\n    } else if (stream.sol() && stream.match(rx_explicit)) {\n      change(state, to_explicit);\n      token = 'meta';\n    } else if (stream.sol() && stream.match(rx_section)) {\n      change(state, to_normal);\n      token = 'header';\n    } else if (phase(state) == rx_role_pre ||\n               stream.match(rx_role_pre, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role_pre, 1));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role_pre, 2));\n        stream.match(rx_NAME);\n        token = 'keyword';\n\n        if (stream.current().match(/^(?:math|latex)/)) {\n          state.tmp_stex = true;\n        }\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role_pre, 3));\n        stream.match(/^:`/);\n        token = 'meta';\n        break;\n      case 3:\n        if (state.tmp_stex) {\n          state.tmp_stex = undefined; state.tmp = {\n            mode: mode_stex, local: CodeMirror.startState(mode_stex)\n          };\n        }\n\n        if (state.tmp) {\n          if (stream.peek() == '`') {\n            change(state, to_normal, context(rx_role_pre, 4));\n            state.tmp = undefined;\n            break;\n          }\n\n          token = state.tmp.mode.token(stream, state.tmp.local);\n          break;\n        }\n\n        change(state, to_normal, context(rx_role_pre, 4));\n        stream.match(rx_TEXT2);\n        token = 'string';\n        break;\n      case 4:\n        change(state, to_normal, context(rx_role_pre, 5));\n        stream.match(/^`/);\n        token = 'meta';\n        break;\n      case 5:\n        change(state, to_normal, context(rx_role_pre, 6));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_role_suf ||\n               stream.match(rx_role_suf, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role_suf, 1));\n        stream.match(/^`/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role_suf, 2));\n        stream.match(rx_TEXT2);\n        token = 'string';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role_suf, 3));\n        stream.match(/^`:/);\n        token = 'meta';\n        break;\n      case 3:\n        change(state, to_normal, context(rx_role_suf, 4));\n        stream.match(rx_NAME);\n        token = 'keyword';\n        break;\n      case 4:\n        change(state, to_normal, context(rx_role_suf, 5));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 5:\n        change(state, to_normal, context(rx_role_suf, 6));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_role || stream.match(rx_role, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role, 1));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role, 2));\n        stream.match(rx_NAME);\n        token = 'keyword';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role, 3));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 3:\n        change(state, to_normal, context(rx_role, 4));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_substitution_ref ||\n               stream.match(rx_substitution_ref, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_substitution_ref, 1));\n        stream.match(rx_substitution_text);\n        token = 'variable-2';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_substitution_ref, 2));\n        if (stream.match(/^_?_?/)) token = 'link';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_footnote_ref)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_citation_ref)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_link_ref1)) {\n      change(state, to_normal);\n      if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n        token = 'link';\n      }\n    } else if (phase(state) == rx_link_ref2 ||\n               stream.match(rx_link_ref2, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n          change(state, to_normal, context(rx_link_ref2, 1));\n        } else {\n          stream.match(rx_link_ref2);\n        }\n        break;\n      case 1:\n        change(state, to_normal, context(rx_link_ref2, 2));\n        stream.match(/^`/);\n        token = 'link';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_link_ref2, 3));\n        stream.match(rx_TEXT2);\n        break;\n      case 3:\n        change(state, to_normal, context(rx_link_ref2, 4));\n        stream.match(/^`_/);\n        token = 'link';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_verbatim)) {\n      change(state, to_verbatim);\n    }\n\n    else {\n      if (stream.next()) change(state, to_normal);\n    }\n\n    return token;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_explicit(stream, state) {\n    var token = null;\n\n    if (phase(state) == rx_substitution ||\n        stream.match(rx_substitution, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_substitution, 1));\n        stream.match(rx_substitution_text);\n        token = 'variable-2';\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_substitution, 2));\n        stream.match(rx_substitution_sepa);\n        break;\n      case 2:\n        change(state, to_explicit, context(rx_substitution, 3));\n        stream.match(rx_substitution_name);\n        token = 'keyword';\n        break;\n      case 3:\n        change(state, to_explicit, context(rx_substitution, 4));\n        stream.match(rx_substitution_tail);\n        token = 'meta';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_directive ||\n               stream.match(rx_directive, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_directive, 1));\n        stream.match(rx_directive_name);\n        token = 'keyword';\n\n        if (stream.current().match(/^(?:math|latex)/))\n          state.tmp_stex = true;\n        else if (stream.current().match(/^python/))\n          state.tmp_py = true;\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_directive, 2));\n        stream.match(rx_directive_tail);\n        token = 'meta';\n\n        if (stream.match(/^latex\\s*$/) || state.tmp_stex) {\n          state.tmp_stex = undefined; change(state, to_mode, {\n            mode: mode_stex, local: CodeMirror.startState(mode_stex)\n          });\n        }\n        break;\n      case 2:\n        change(state, to_explicit, context(rx_directive, 3));\n        if (stream.match(/^python\\s*$/) || state.tmp_py) {\n          state.tmp_py = undefined; change(state, to_mode, {\n            mode: mode_python, local: CodeMirror.startState(mode_python)\n          });\n        }\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_link || stream.match(rx_link, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_link, 1));\n        stream.match(rx_link_head);\n        stream.match(rx_link_name);\n        token = 'link';\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_link, 2));\n        stream.match(rx_link_tail);\n        token = 'meta';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_footnote)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_citation)) {\n      change(state, to_normal);\n      token = 'quote';\n    }\n\n    else {\n      stream.eatSpace();\n      if (stream.eol()) {\n        change(state, to_normal);\n      } else {\n        stream.skipToEnd();\n        change(state, to_comment);\n        token = 'comment';\n      }\n    }\n\n    return token;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_comment(stream, state) {\n    return as_block(stream, state, 'comment');\n  }\n\n  function to_verbatim(stream, state) {\n    return as_block(stream, state, 'meta');\n  }\n\n  function as_block(stream, state, token) {\n    if (stream.eol() || stream.eatSpace()) {\n      stream.skipToEnd();\n      return token;\n    } else {\n      change(state, to_normal);\n      return null;\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_mode(stream, state) {\n\n    if (state.ctx.mode && state.ctx.local) {\n\n      if (stream.sol()) {\n        if (!stream.eatSpace()) change(state, to_normal);\n        return null;\n      }\n\n      return state.ctx.mode.token(stream, state.ctx.local);\n    }\n\n    change(state, to_normal);\n    return null;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function context(phase, stage, mode, local) {\n    return {phase: phase, stage: stage, mode: mode, local: local};\n  }\n\n  function change(state, tok, ctx) {\n    state.tok = tok;\n    state.ctx = ctx || {};\n  }\n\n  function stage(state) {\n    return state.ctx.stage || 0;\n  }\n\n  function phase(state) {\n    return state.ctx.phase;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  return {\n    startState: function () {\n      return {tok: to_normal, ctx: context(undefined, 0)};\n    },\n\n    copyState: function (state) {\n      var ctx = state.ctx, tmp = state.tmp;\n      if (ctx.local)\n        ctx = {mode: ctx.mode, local: CodeMirror.copyState(ctx.mode, ctx.local)};\n      if (tmp)\n        tmp = {mode: tmp.mode, local: CodeMirror.copyState(tmp.mode, tmp.local)};\n      return {tok: state.tok, ctx: ctx, tmp: tmp};\n    },\n\n    innerMode: function (state) {\n      return state.tmp      ? {state: state.tmp.local, mode: state.tmp.mode}\n      : state.ctx.mode ? {state: state.ctx.local, mode: state.ctx.mode}\n      : null;\n    },\n\n    token: function (stream, state) {\n      return state.tok(stream, state);\n    }\n  };\n}, 'python', 'stex');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nCodeMirror.defineMIME('text/x-rst', 'rst');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter, line) {\n      return base.indent(state.base, textAfter, line);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n"],"sourceRoot":""}